[{"/home/mastro/Desktop/fasto/fasto-admin/src/App.js":"1","/home/mastro/Desktop/fasto/fasto-admin/src/views/pages/page404/Page404.js":"2","/home/mastro/Desktop/fasto/fasto-admin/src/views/pages/register/Register.js":"3","/home/mastro/Desktop/fasto/fasto-admin/src/containers/TheSidebar.js":"4","/home/mastro/Desktop/fasto/fasto-admin/src/containers/TheHeaderDropdownNotif.js":"5","/home/mastro/Desktop/fasto/fasto-admin/src/containers/TheHeader.js":"6","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/adminActionType.js":"7","/home/mastro/Desktop/fasto/fasto-admin/src/redux/reducer/categoryReducer.js":"8","/home/mastro/Desktop/fasto/fasto-admin/src/redux/reducer/ticketReducer.js":"9","/home/mastro/Desktop/fasto/fasto-admin/src/redux/reducer/vehicalsReducers.js":"10","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/offerActionType.js":"11","/home/mastro/Desktop/fasto/fasto-admin/src/services/index.js":"12","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/driversActionType.js":"13","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/cityActionType.js":"14","/home/mastro/Desktop/fasto/fasto-admin/src/views/icons/brands/Brands.js":"15","/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/base_fare/base_fare.js":"16","/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/colors/Colors.js":"17","/home/mastro/Desktop/fasto/fasto-admin/src/views/base/tabs/Tabs.js":"18","/home/mastro/Desktop/fasto/fasto-admin/src/views/notifications/alerts/Alerts.js":"19","/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/goodtype/goodtype.js":"20","/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/offers/offers.js":"21","/home/mastro/Desktop/fasto/fasto-admin/src/views/notifications/toaster/Toaster.js":"22","/home/mastro/Desktop/fasto/fasto-admin/src/views/widgets/Widgets.js":"23","/home/mastro/Desktop/fasto/fasto-admin/src/views/base/breadcrumbs/Breadcrumbs.js":"24","/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/drivers/drivers.js":"25","/home/mastro/Desktop/fasto/fasto-admin/src/views/base/cards/Cards.js":"26","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/vehicalAction.js":"27","/home/mastro/Desktop/fasto/fasto-admin/src/views/base/switches/Switches.js":"28","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/userAction.js":"29","/home/mastro/Desktop/fasto/fasto-admin/src/views/charts/MainChartExample.js":"30","/home/mastro/Desktop/fasto/fasto-admin/src/views/widgets/WidgetsBrand.js":"31","/home/mastro/Desktop/fasto/fasto-admin/src/services/goodtype.js":"32","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/settingActionType.js":"33","/home/mastro/Desktop/fasto/fasto-admin/src/services/rides.js":"34","/home/mastro/Desktop/fasto/fasto-admin/src/views/base/forms/BasicForms.js":"35","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/ticketAction.js":"36","/home/mastro/Desktop/fasto/fasto-admin/src/views/buttons/button-groups/ButtonGroups.js":"37","/home/mastro/Desktop/fasto/fasto-admin/src/reportWebVitals.js":"38","/home/mastro/Desktop/fasto/fasto-admin/src/redux/store.js":"39","/home/mastro/Desktop/fasto/fasto-admin/src/components/pages/Home.js":"40","/home/mastro/Desktop/fasto/fasto-admin/src/containers/index.js":"41","/home/mastro/Desktop/fasto/fasto-admin/src/containers/TheContent.js":"42","/home/mastro/Desktop/fasto/fasto-admin/src/containers/TheHeaderDropdownTasks.js":"43","/home/mastro/Desktop/fasto/fasto-admin/src/redux/reducer/adminReducer.js":"44","/home/mastro/Desktop/fasto/fasto-admin/src/redux/reducer/offerReducer.js":"45","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/usersActionType.js":"46","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/ridesActionType.js":"47","/home/mastro/Desktop/fasto/fasto-admin/src/views/users/User.js":"48","/home/mastro/Desktop/fasto/fasto-admin/src/views/icons/flags/Flags.js":"49","/home/mastro/Desktop/fasto/fasto-admin/src/views/base/paginations/Pagnations.js":"50","/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/refferals/refferals.js":"51","/home/mastro/Desktop/fasto/fasto-admin/src/views/base/navbars/Navbars.js":"52","/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/admin/Admin.js":"53","/home/mastro/Desktop/fasto/fasto-admin/src/views/base/list-groups/ListGroups.js":"54","/home/mastro/Desktop/fasto/fasto-admin/src/views/dashboard/Dashboard.js":"55","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/cityactions.js":"56","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/driverAction.js":"57","/home/mastro/Desktop/fasto/fasto-admin/src/views/widgets/WidgetsDropdown.js":"58","/home/mastro/Desktop/fasto/fasto-admin/src/views/charts/ChartLineSimple.js":"59","/home/mastro/Desktop/fasto/fasto-admin/src/services/city.js":"60","/home/mastro/Desktop/fasto/fasto-admin/src/services/setting.js":"61","/home/mastro/Desktop/fasto/fasto-admin/src/index.js":"62","/home/mastro/Desktop/fasto/fasto-admin/src/views/pages/page500/Page500.js":"63","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/adminAction.js":"64","/home/mastro/Desktop/fasto/fasto-admin/src/redux/reducer/ridesReducers.js":"65","/home/mastro/Desktop/fasto/fasto-admin/src/containers/_nav.js":"66","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/vehicalActionType.js":"67","/home/mastro/Desktop/fasto/fasto-admin/src/views/users/Users.js":"68","/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/typography/Typography.js":"69","/home/mastro/Desktop/fasto/fasto-admin/src/views/icons/coreui-icons/CoreUIIcons.js":"70","/home/mastro/Desktop/fasto/fasto-admin/src/views/base/carousels/Carousels.js":"71","/home/mastro/Desktop/fasto/fasto-admin/src/reusable/DocsLink.js":"72","/home/mastro/Desktop/fasto/fasto-admin/src/views/base/navs/Navs.js":"73","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/goodtypeactions.js":"74","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/rideAction.js":"75","/home/mastro/Desktop/fasto/fasto-admin/src/services/offer.js":"76","/home/mastro/Desktop/fasto/fasto-admin/src/services/drivers.js":"77"},{"size":2414,"mtime":1627023400628,"results":"78","hashOfConfig":"79"},{"size":1294,"mtime":1627023400632,"results":"80","hashOfConfig":"79"},{"size":5124,"mtime":1627024676006,"results":"81","hashOfConfig":"79"},{"size":1342,"mtime":1627023400628,"results":"82","hashOfConfig":"79"},{"size":2543,"mtime":1627023400628,"results":"83","hashOfConfig":"79"},{"size":3132,"mtime":1627024676002,"results":"84","hashOfConfig":"79"},{"size":250,"mtime":1627024676002,"results":"85","hashOfConfig":"79"},{"size":768,"mtime":1627023400628,"results":"86","hashOfConfig":"79"},{"size":310,"mtime":1627024676002,"results":"87","hashOfConfig":"79"},{"size":767,"mtime":1627023400628,"results":"88","hashOfConfig":"79"},{"size":170,"mtime":1627023400628,"results":"89","hashOfConfig":"79"},{"size":655,"mtime":1627379426039,"results":"90","hashOfConfig":"79"},{"size":82,"mtime":1627023400628,"results":"91","hashOfConfig":"79"},{"size":320,"mtime":1627024676002,"results":"92","hashOfConfig":"79"},{"size":969,"mtime":1627023400632,"results":"93","hashOfConfig":"79"},{"size":8080,"mtime":1627024676006,"results":"94","hashOfConfig":"79"},{"size":8787,"mtime":1627024676006,"results":"95","hashOfConfig":"79"},{"size":4941,"mtime":1627023400632,"results":"96","hashOfConfig":"79"},{"size":6069,"mtime":1627023400632,"results":"97","hashOfConfig":"79"},{"size":5136,"mtime":1627024676006,"results":"98","hashOfConfig":"79"},{"size":7451,"mtime":1627024676006,"results":"99","hashOfConfig":"79"},{"size":5493,"mtime":1627023400632,"results":"100","hashOfConfig":"79"},{"size":12301,"mtime":1627023400632,"results":"101","hashOfConfig":"79"},{"size":8586,"mtime":1627023400632,"results":"102","hashOfConfig":"79"},{"size":14561,"mtime":1627023400632,"results":"103","hashOfConfig":"79"},{"size":18195,"mtime":1627023400632,"results":"104","hashOfConfig":"79"},{"size":1079,"mtime":1627023400628,"results":"105","hashOfConfig":"79"},{"size":36979,"mtime":1627023400632,"results":"106","hashOfConfig":"79"},{"size":452,"mtime":1627038038157,"results":"107","hashOfConfig":"79"},{"size":2486,"mtime":1627023400632,"results":"108","hashOfConfig":"79"},{"size":4031,"mtime":1627023400632,"results":"109","hashOfConfig":"79"},{"size":369,"mtime":1627023400628,"results":"110","hashOfConfig":"79"},{"size":186,"mtime":1627023400628,"results":"111","hashOfConfig":"79"},{"size":629,"mtime":1627023400628,"results":"112","hashOfConfig":"79"},{"size":60577,"mtime":1627023400632,"results":"113","hashOfConfig":"79"},{"size":369,"mtime":1627121239835,"results":"114","hashOfConfig":"79"},{"size":10958,"mtime":1627040361412,"results":"115","hashOfConfig":"79"},{"size":362,"mtime":1627023400628,"results":"116","hashOfConfig":"79"},{"size":326,"mtime":1627023400628,"results":"117","hashOfConfig":"79"},{"size":83,"mtime":1627023400628,"results":"118","hashOfConfig":"79"},{"size":596,"mtime":1627023400628,"results":"119","hashOfConfig":"79"},{"size":1452,"mtime":1627024676002,"results":"120","hashOfConfig":"79"},{"size":2253,"mtime":1627023400628,"results":"121","hashOfConfig":"79"},{"size":854,"mtime":1627024676002,"results":"122","hashOfConfig":"79"},{"size":732,"mtime":1627023400628,"results":"123","hashOfConfig":"79"},{"size":74,"mtime":1627023400628,"results":"124","hashOfConfig":"79"},{"size":217,"mtime":1627023400628,"results":"125","hashOfConfig":"79"},{"size":1232,"mtime":1627023400632,"results":"126","hashOfConfig":"79"},{"size":589,"mtime":1627023400632,"results":"127","hashOfConfig":"79"},{"size":2175,"mtime":1627023400632,"results":"128","hashOfConfig":"79"},{"size":2862,"mtime":1627023400632,"results":"129","hashOfConfig":"79"},{"size":5423,"mtime":1627023400632,"results":"130","hashOfConfig":"79"},{"size":10595,"mtime":1627024676006,"results":"131","hashOfConfig":"79"},{"size":15513,"mtime":1627023400632,"results":"132","hashOfConfig":"79"},{"size":23856,"mtime":1627023400632,"results":"133","hashOfConfig":"79"},{"size":1699,"mtime":1627024676002,"results":"134","hashOfConfig":"79"},{"size":328,"mtime":1627023400628,"results":"135","hashOfConfig":"79"},{"size":4776,"mtime":1627023400632,"results":"136","hashOfConfig":"79"},{"size":3294,"mtime":1627023400632,"results":"137","hashOfConfig":"79"},{"size":623,"mtime":1627024676002,"results":"138","hashOfConfig":"79"},{"size":352,"mtime":1627023400628,"results":"139","hashOfConfig":"79"},{"size":500,"mtime":1627023400628,"results":"140","hashOfConfig":"79"},{"size":1313,"mtime":1627023400632,"results":"141","hashOfConfig":"79"},{"size":1281,"mtime":1627024676002,"results":"142","hashOfConfig":"79"},{"size":779,"mtime":1627023400628,"results":"143","hashOfConfig":"79"},{"size":6400,"mtime":1627024676002,"results":"144","hashOfConfig":"79"},{"size":188,"mtime":1627023400628,"results":"145","hashOfConfig":"79"},{"size":2132,"mtime":1627023400632,"results":"146","hashOfConfig":"79"},{"size":8393,"mtime":1627024676006,"results":"147","hashOfConfig":"79"},{"size":6635,"mtime":1627023400632,"results":"148","hashOfConfig":"79"},{"size":8355,"mtime":1627023400632,"results":"149","hashOfConfig":"79"},{"size":581,"mtime":1627023400628,"results":"150","hashOfConfig":"79"},{"size":9641,"mtime":1627023400632,"results":"151","hashOfConfig":"79"},{"size":1050,"mtime":1627023400628,"results":"152","hashOfConfig":"79"},{"size":802,"mtime":1627023400628,"results":"153","hashOfConfig":"79"},{"size":332,"mtime":1627023400628,"results":"154","hashOfConfig":"79"},{"size":466,"mtime":1627023400628,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"zupwa3",{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"160"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"160"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"160"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"167"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"167"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"167"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"167"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"160"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"167"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"167"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"167"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mastro/Desktop/fasto/fasto-admin/src/App.js",["324","325","326"],"/home/mastro/Desktop/fasto/fasto-admin/src/views/pages/page404/Page404.js",[],["327","328"],"/home/mastro/Desktop/fasto/fasto-admin/src/views/pages/register/Register.js",["329","330"],"import React, { useState } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createAdmin } from \"../../../redux/actions/adminAction\";\nimport { useHistory, useLocation } from \"react-router\";\n\nconst Register = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const onSubmit = async () => {\n    const params = {\n      email,\n      password,\n      userName,\n      mobile,\n      role,\n    };\n    const data = await dispatch(createAdmin(params));\n   console.log(data);\n    if (data.responseCode === 200) {\n     alert(data.message);\n      history.push(\"/dashboard\");\n    } else {\n      alert(data.message);\n    }\n  };\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm>\n                  <h1>Register</h1>\n                  <p className=\"text-muted\">Create your account</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-user\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"text\"\n                      placeholder=\"Username\"\n                      autoComplete=\"username\"\n                      value={userName}\n                      onChange={(e) => setUserName(e.target.value)}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>@</CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"text\"\n                      placeholder=\"Email\"\n                      autoComplete=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>@</CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"text\"\n                      placeholder=\"Mobile\"\n                      autoComplete=\"mobile\"\n                      value={mobile}\n                      onChange={(e) => setMobile(e.target.value)}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"text\"\n                      placeholder=\"Role\"\n                      autoComplete=\"role\"\n                      value={role}\n                      onChange={(e) => setRole(e.target.value)}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      autoComplete=\"new-password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </CInputGroup>\n                  <CButton color=\"success\" block onClick={onSubmit}>\n                    Create Account\n                  </CButton>\n                </CForm>\n              </CCardBody>\n              <CCardFooter className=\"p-4\">\n                <CRow>\n                  <CCol xs=\"12\" sm=\"6\">\n                    <CButton className=\"btn-facebook mb-1\" block>\n                      <span>facebook</span>\n                    </CButton>\n                  </CCol>\n                  <CCol xs=\"12\" sm=\"6\">\n                    <CButton className=\"btn-twitter mb-1\" block>\n                      <span>twitter</span>\n                    </CButton>\n                  </CCol>\n                </CRow>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Register;\n","/home/mastro/Desktop/fasto/fasto-admin/src/containers/TheSidebar.js",["331","332"],"import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n} from \"@coreui/react\";\n\nimport CIcon from \"@coreui/icons-react\";\n\n// sidebar nav config\nimport navigation from \"./_nav\";\n\nconst TheSidebar = () => {\n  // const dispatch = useDispatch();\n  // const show = useSelector((state) => state.sidebarShow);\n\n  return (\n    <CSidebar\n      show={true}\n      // onShowChange={(val) => dispatch({ type: \"set\", sidebarShow: val })}\n    >\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\n        <CIcon\n          className=\"c-sidebar-brand-full\"\n          name=\"logo-negative\"\n          height={35}\n        />\n        <CIcon\n          className=\"c-sidebar-brand-minimized\"\n          name=\"sygnet\"\n          height={35}\n        />\n      </CSidebarBrand>\n      <CSidebarNav>\n        <CCreateElement\n          items={navigation}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle,\n          }}\n        />\n      </CSidebarNav>\n      <CSidebarMinimizer className=\"c-d-md-down-none\" />\n    </CSidebar>\n  );\n};\n\nexport default React.memo(TheSidebar);\n",["333","334"],"/home/mastro/Desktop/fasto/fasto-admin/src/containers/TheHeaderDropdownNotif.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/containers/TheHeader.js",["335","336"],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/adminActionType.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/reducer/categoryReducer.js",["337"],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/reducer/ticketReducer.js",["338"],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/reducer/vehicalsReducers.js",["339"],"import * as vehicalActionType from '../actionsType/vehicalActionType'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case vehicalActionType.GET_VEHICALS:\n      return {\n        ...state,\n        vehicalslist: action.payload,\n      }\n    case vehicalActionType.ADD_VEHICALS:\n      return {\n        ...state,\n        vehical: action.payload,\n      }\n    case vehicalActionType.GET_SINGLE_VEHICLE:\n      return {\n        ...state,\n        singleVehicle: action.payload,\n      }\n    case vehicalActionType.DELETE_VEHICLE:\n      const filterproduct = state.vehicalslist.filter(\n        (item) => item._id !== action.payload\n      )\n      return {\n        ...state,\n        vehicalslist: filterproduct,\n      }\n    default:\n      return state\n  }\n}\n","/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/offerActionType.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/services/index.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/driversActionType.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/cityActionType.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/icons/brands/Brands.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/base_fare/base_fare.js",["340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360"],"/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/colors/Colors.js",["361","362","363","364"],"import React, { useEffect, useState, createRef } from \"react\";\nimport Modal from \"../../../components/common/Modal\";\nimport {\n  CRow,\n  CCol,\n  CLabel,\n  CInput,\n  CFormGroup,\n  CFormText,\n  CButton,\n  CToaster,\n  CToastBody,\n  CToast,\n} from \"@coreui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createCity,\n  getAllCities,\n  updateCity,\n  deleteCity,\n} from \"../../../redux/actions/cityactions\";\nconst City = () => {\n  const [flage, setFlage] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  const [city_name, setcity_name] = useState(\"\");\n  const [Edit, setEdit] = useState(false);\n  const [_id, set_id] = useState(\"\");\n  const [state_name, setState_name] = useState(\"\");\n  const [country, setcountry] = useState(\"\");\n  const [city_class, setcity_class] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [toast, setToast] = useState(false);\n  const dispatch = useDispatch();\n  const { allcities } = useSelector((state) => state.city);\n  useEffect(() => {\n    async function getCities() {\n      dispatch(getAllCities());\n    }\n    getCities();\n  }, [flage]);\n  console.log(allcities, \"All\");\n\n  const updatehandleSubmit = async () => {\n    let params = {\n      _id,\n      city_name,\n      state_name,\n      country,\n      city_class,\n    };\n    console.log(params, \"update\");\n    const res = await dispatch(updateCity(params));\n    if (res.is_success == true) {\n      setOpenModal(false);\n      setFlage(!flage);\n    }\n    setMessage(res.message);\n    setToast(!toast);\n  };\n\n  const handleSubmit = async () => {\n    let params = {\n      city_name,\n      state_name,\n      country,\n      city_class,\n    };\n    console.log(params);\n    const res = await dispatch(createCity(params));\n    if (res.is_success == true) {\n      setOpenModal(false);\n      setFlage(!flage);\n    }\n    setMessage(res.message);\n    setToast(!toast);\n  };\n  return (\n    <>\n      <div className=\"d-flex justify-content-between\">\n        <h3>City</h3>\n        <div onClick={() => setOpenModal(!openModal)}>\n          <i class=\"fas fa-plus-square\"></i>\n        </div>\n      </div>\n      <table className=\"table w-100\">\n        <thead>\n          <tr>\n            <th>City Name </th>\n            <th>State Name </th>\n            <th>Country</th>\n            <th>City Class</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {allcities &&\n            allcities.map((city) => (\n              <tr>\n                <td className=\"text-muted\">{city.city_name}</td>\n                <td className=\"font-weight-bold\">{city.state_name}</td>\n                <td className=\"\">{city.country}</td>\n                <td>{city.city_class}</td>\n                <td className=\"text-center\">\n                  <i\n                    class=\"fas fa-pen\"\n                    style={{ color: \"blue\" }}\n                    onClick={() =>\n                      setTimeout(() => {\n                        setEdit(true);\n                        set_id(city._id);\n                        setEdit(!Edit);\n                      }, 1000)\n                    }\n                  ></i>\n                </td>\n                <td className=\"text-center\">\n                  <i\n                    class=\"fas fa-trash\"\n                    style={{ color: \"red\" }}\n                    onClick={() => dispatch(deleteCity(city._id))}\n                  ></i>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <CToaster>\n        <CToast show={toast} autohide={2000}>\n          <CToastBody>{message}</CToastBody>\n        </CToast>\n      </CToaster>\n      <Modal open={openModal} close={() => setOpenModal(!openModal)}>\n        <>\n          <h3>Add City</h3>\n          <CRow>\n            <CCol md=\"12\">\n              <CFormGroup>\n                <CLabel htmlFor=\"city_name\">City</CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"city_name\"\n                  name=\"city_name\"\n                  value={city_name}\n                  placeholder=\"Enter CityName..\"\n                  onChange={(e) => setcity_name(e.target.value)}\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your City\n                </CFormText>\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"state_name\">State Name</CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"state_name\"\n                  name=\"state_name\"\n                  value={state_name}\n                  placeholder=\"Enter State Name..\"\n                  onChange={(e) => setState_name(e.target.value)}\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your State Name\n                </CFormText>\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"country\">Country</CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"country\"\n                  name=\"country\"\n                  value={country}\n                  placeholder=\"Enter Country..\"\n                  onChange={(e) => setcountry(e.target.value)}\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your Country\n                </CFormText>\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"city_class\">City Class</CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"city_class\"\n                  name=\"city_class\"\n                  placeholder=\"Enter City Class..\"\n                  onChange={(e) => setcity_class(e.target.value)}\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your City Charges\n                </CFormText>\n              </CFormGroup>\n              <div style={{ textAlign: \"center\" }}>\n                ''\n                <CButton color=\"primary\" onClick={handleSubmit}>\n                  Create City\n                </CButton>\n              </div>\n            </CCol>\n          </CRow>\n        </>\n      </Modal>\n\n      {/* Edit City */}\n\n      <Modal open={Edit} close={() => setEdit(!Edit)}>\n        <>\n          <h3>Edit City</h3>\n          <CRow>\n            <CCol md=\"12\">\n              <CFormGroup>\n                <CLabel htmlFor=\"city_name\">City</CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"city_name\"\n                  name=\"city_name\"\n                  value={city_name}\n                  placeholder=\"Enter CityName..\"\n                  onChange={(e) => setcity_name(e.target.value)}\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your City\n                </CFormText>\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"state_name\">State Name</CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"state_name\"\n                  name=\"state_name\"\n                  value={state_name}\n                  placeholder=\"Enter State Name..\"\n                  onChange={(e) => setState_name(e.target.value)}\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your State Name\n                </CFormText>\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"country\">Country</CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"country\"\n                  name=\"country\"\n                  value={country}\n                  placeholder=\"Enter Country..\"\n                  onChange={(e) => setcountry(e.target.value)}\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your Country\n                </CFormText>\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"city_class\">City Charges</CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"city_class\"\n                  name=\"city_class\"\n                  placeholder=\"Enter City Charges..\"\n                  onChange={(e) => setcity_class(e.target.value)}\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your City Charges\n                </CFormText>\n              </CFormGroup>\n              <div style={{ textAlign: \"center\" }}>\n                ''\n                <CButton color=\"primary\" onClick={updatehandleSubmit}>\n                  Update City\n                </CButton>\n              </div>\n            </CCol>\n          </CRow>\n        </>\n      </Modal>\n    </>\n  );\n};\n\nexport default City;\n","/home/mastro/Desktop/fasto/fasto-admin/src/views/base/tabs/Tabs.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/notifications/alerts/Alerts.js",["365","366","367","368","369","370","371","372"],"import React, { useEffect, useState, createRef } from \"react\";\nimport classNames from \"classnames\";\nimport { rgbToHex } from \"@coreui/utils\";\nimport DocsLink from \"../../../reusable/DocsLink\";\nimport Modal from \"../../../components/common/Modal\";\nimport {\n  CRow,\n  CCol,\n  CLabel,\n  CInput,\n  CFormGroup,\n  CFormText,\n  CButton,\n  CToaster,\n  CToastBody,\n  CToast,\n} from \"@coreui/react\";\nconst Alert = () => {\n  const [openModal, setOpenModal] = useState(false);\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-between\">\n        <h3>Reports</h3>\n        <div onClick={() => setOpenModal(!openModal)}>\n          <i class=\"fas fa-plus-square\"></i>\n        </div>\n      </div>\n      <table className=\"table w-100\">\n        <thead>\n          <tr>\n            <th> By Date To From </th>\n            <th>User Type</th>\n            <th>ongoing </th>\n            <th>complete </th>\n            <th> canceled </th>\n            <th>Rating Order</th>\n\n            <th>total km </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>abc</td>\n            <td>abc</td>\n            <td>abc</td>\n            <td>abc</td>\n            <td>abc</td>\n            <td>abc</td>\n            <td>abc</td>\n          </tr>\n          <tr>\n            <td>abc</td>\n            <td>abc</td>\n            <td>abc</td>\n            <td>abc</td>\n            <td>abc</td>\n            <td>abc</td>\n            <td>abc</td>\n          </tr>\n          <tr>\n            <td>abc</td>\n            <td>abc</td>\n            <td>abc</td>\n            <td>abc</td>\n            <td>abc</td>\n            <td>abc</td>\n            <td>abc</td>\n          </tr>\n        </tbody>\n      </table>\n      <Modal open={openModal} close={() => setOpenModal(!openModal)}>\n        <>\n          <h3>Reports</h3>\n          <CRow>\n            <CCol md=\"12\">\n            \n              <CFormGroup>\n              <div className=\"d-flex justify-content-between\">\n                  <div>\n                    <CLabel htmlFor=\"state_name\">By Date To From </CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor=\"state_name\">User Type </CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                </div>\n              </CFormGroup>\n              <CFormGroup>\n              <div className=\"d-flex justify-content-between\">\n                  <div>\n                    <CLabel htmlFor=\"state_name\">ongoing </CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor=\"state_name\"> complete  </CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                </div>\n              </CFormGroup>\n              <CFormGroup>\n              <div className=\"d-flex justify-content-between\">\n                  <div>\n                    <CLabel htmlFor=\"state_name\">canceled  </CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor=\"state_name\"> Rating Order  </CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                </div>\n              </CFormGroup>\n                <CFormGroup>\n              <div className=\"d-flex justify-content-between\">\n                  <div>\n                    <CLabel htmlFor=\"state_name\">total km  </CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                 \n                </div>\n              </CFormGroup>\n              <div style={{ textAlign: \"center\" }}>\n                <CButton color=\"primary\" onClick>\n                  Create City\n                </CButton>\n              </div>\n            </CCol>\n          </CRow>\n        </>\n      </Modal>\n \n    </>\n    \n    \n  );\n};\n\nexport default Alert;\n","/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/goodtype/goodtype.js",["373","374","375","376","377","378","379","380","381","382","383"],"import React, { useEffect, useState, createRef } from \"react\";\nimport classNames from \"classnames\";\nimport { rgbToHex } from \"@coreui/utils\";\nimport DocsLink from \"../../../reusable/DocsLink\";\nimport Modal from \"../../../components/common/Modal\";\nimport {\n  CRow,\n  CCol,\n  CLabel,\n  CInput,\n  CFormGroup,\n  CFormText,\n  CButton,\n  CToaster,\n  CToastBody,\n  CToast,\n} from \"@coreui/react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  creategoodtype,\n  getAllgoodtypes,\n  updategoodtype,\n  deletegoodtype,\n} from \"../../../redux/actions/goodtypeactions\";\nconst GoodType = () => {\n  const [openModal, setOpenModal] = useState(false);\n  const [category_name, setcategory_name] = useState(\"\");\n  const [category_image, setcategory_image] = useState(\"\");\n  const [_id, set_id] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [toast, setToast] = useState(false);\n  const dispatch = useDispatch();\n  const { allgoods } = useSelector((state) => state.category);\n  useEffect(() => {\n    async function getgoodtypes() {\n      dispatch(getAllgoodtypes());\n    }\n    getgoodtypes();\n  }, []);\n  const handleSubmit = async () => {\n    let params = {\n      category_name,\n      category_image,\n    };\n    const res = await dispatch(creategoodtype(params));\n    if (res.isSuccess == true) {\n      setOpenModal(false);\n      dispatch(getAllgoodtypes());\n    }\n    setMessage(res.message);\n    setToast(!toast);\n  };\n  const handleEditSubmit = async () => {\n    let params = {\n      category_name,\n      category_image,\n    };\n    const res = await dispatch(updategoodtype(_id, params));\n    if (res.is_success == true) {\n      setOpenModal(false);\n      dispatch(getAllgoodtypes());\n    }\n    setMessage(res.message);\n    setToast(!toast);\n  };\n  return (\n    <>\n      <div className=\"d-flex justify-content-between\">\n        <h3>Good Type</h3>\n        <div onClick={() => setOpenModal(!openModal)}>\n          <i class=\"fas fa-plus-square\"></i>\n        </div>\n      </div>\n      <table className=\"table w-100\">\n        <thead>\n          <tr>\n            <th>Category Name </th>\n            <th>Category Image </th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {allgoods &&\n            allgoods.map((good) => (\n              <tr>\n                <td className=\"text-muted\">{good.category_name}</td>\n                <td className=\"font-weight-bold\">{good.category_image}</td>\n                <td className=\"text-center\">\n                  <i\n                    class=\"fas fa-pen\"\n                    style={{ color: \"blue\" }}\n                    onClick={() =>\n                      setTimeout(() => {\n                        setEdit(true);\n                        set_id(good._id);\n                        setcategory_name(good.category_name);\n                        setcategory_image(good.category_image);\n\n                        setOpenModal(!openModal);\n                      }, 1000)\n                    }\n                  ></i>\n                </td>\n                <td className=\"text-center\">\n                  <i\n                    class=\"fas fa-trash\"\n                    style={{ color: \"red\" }}\n                    onClick={() => dispatch(deletegoodtype(good._id))}\n                  ></i>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <Modal open={openModal} close={() => setOpenModal(!openModal)}>\n        <>\n          <h3>Good Type</h3>\n          <CRow>\n            <CCol md=\"12\">\n              <CFormGroup>\n                <CLabel htmlFor=\"category_name\">Category Name</CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"category_name\"\n                  name=\"category_name\"\n                  placeholder=\"Enter Category Name..\"\n                  value={category_name}\n                  onChange={(e) => setcategory_name(e.target.value)}\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your City\n                </CFormText>\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"category_image\">Category Image</CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"category_image\"\n                  name=\"category_image\"\n                  value={category_image}\n                  onChange={(e) => setcategory_image(e.target.value)}\n                  placeholder=\"Enter State Name..\"\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your State Name\n                </CFormText>\n              </CFormGroup>\n\n              <div style={{ textAlign: \"center\" }}>\n                <CButton\n                  color=\"primary\"\n                  onClick={edit ? handleEditSubmit : handleSubmit}\n                >\n                  {edit ? \"Update Good Type\" : \"Create Good Type\"}\n                </CButton>\n              </div>\n            </CCol>\n          </CRow>\n        </>\n      </Modal>\n    </>\n  );\n};\n\nexport default GoodType;\n","/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/offers/offers.js",["384","385","386","387","388","389","390","391","392","393","394"],"import React, { useEffect, useState, createRef } from \"react\";\nimport classNames from \"classnames\";\nimport { rgbToHex } from \"@coreui/utils\";\nimport DocsLink from \"../../../reusable/DocsLink\";\nimport Modal from \"../../../components/common/Modal\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  CRow,\n  CCol,\n  CLabel,\n  CInput,\n  CFormGroup,\n  CFormText,\n  CButton,\n  CToaster,\n  CToastBody,\n  CToast,\n} from \"@coreui/react\";\nimport {\n  createOffer,\n  getAllOffer,\n  updateOffer,\n  deleteOffer\n} from \"../../../redux/actions/offeractions\";\nconst Offer = () => {\n  const [openModal, setOpenModal] = useState(false);\n  const [offer_name, setoffer_name] = useState(\"\");\n  const [offer_code, setcode] = useState(\"\");\n  const [offer_discount, setdiscount] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n  const [_id, set_id] = useState(\"\");\n  const [offer_valid_to, setvalid_to] = useState(\"\");\n  const [offer_valid_from, setvalid_from] = useState(\"\");\n  const { alloffers } = useSelector((state) => state.offer);\n  const [message, setMessage] = useState(\"\");\n  const [toast, setToast] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    async function alloffer() {\n      await dispatch(getAllOffer());\n    }\n    alloffer();\n  }, []);\n  const handleSubmit = async () => {\n    let params = {\n      offer_name,\n      offer_code,\n      offer_discount,\n      offer_valid_to,\n      offer_valid_from,\n    };\n    const res = await dispatch(createOffer(params));\n    if (res.isSuccess == true) {\n      setOpenModal(false);\n      await dispatch(getAllOffer());\n    }\n    setMessage(res.message);\n    setToast(!toast);\n\n    console.log(params, \"params\");\n  };\n\n  const handleEditSubmit = async () => {\n    let params = {\n      offer_name,\n      offer_code,\n      offer_discount,\n      offer_valid_to,\n      offer_valid_from,\n    };\n    const res = await dispatch(updateOffer(_id, params));\n    if (res.is_success == true) {\n      setOpenModal(false);\n      await dispatch(getAllOffer());\n    }\n    setMessage(res.message);\n    setToast(!toast);\n\n    console.log(params, \"params\");\n  };\n  return (\n    <>\n      <div className=\"d-flex justify-content-between\">\n        <h3>Offers</h3>\n        <div onClick={() => setOpenModal(!openModal)}>\n          <i class=\"fas fa-plus-square\"></i>\n        </div>\n      </div>\n      <table className=\"table w-100\">\n        <thead>\n          <tr>\n            <th>Offer Name </th>\n            <th> Code </th>\n            <th>Discount</th>\n            <th>Valid to </th>\n            <th>Valid From</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {alloffers &&\n            alloffers.map((offer) => (\n              <tr>\n                <td className=\"text-muted\">{offer.offer_name}</td>\n                <td className=\"font-weight-bold\">{offer.offer_code}</td>\n                <td> {offer.offer_discount}</td>\n\n                <td className=\"text-center\">{offer.offer_valid_to}</td>\n                <td className=\"text-center\">{offer.offer_valid_from}</td>\n                <td className=\"text-center\">\n                  <i\n                    class=\"fas fa-pen\"\n                    style={{ color: \"blue\" }}\n                    onClick={() =>\n                      setTimeout(() => {\n                        setEdit(true);\n                        set_id(offer._id);\n                        setoffer_name(offer.offer_name);\n                        setcode(offer.offer_code);\n                        setdiscount(offer.offer_discount);\n                        setvalid_to(offer.offer_valid_to);\n                        setvalid_from(offer.offer_valid_from);\n\n                        setOpenModal(!openModal);\n                      }, 1000)\n                    }\n                  ></i>\n                </td>\n                <td className=\"text-center\">\n                  <i\n                    class=\"fas fa-trash\"\n                    style={{ color: \"red\" }}\n                    onClick={() => dispatch(deleteOffer(offer._id))}\n                  ></i>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <Modal open={openModal} close={() => setOpenModal(!openModal)}>\n        <>\n          <h3>Offers</h3>\n          <CRow>\n            <CCol md=\"12\">\n              <CFormGroup>\n                <CLabel htmlFor=\"city_name\">Offers</CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"city_name\"\n                  name=\"city_name\"\n                  placeholder=\"Enter CityName..\"\n                  value={offer_name}\n                  onChange={(e) => setoffer_name(e.target.value)}\n                />\n                <CFormText className=\"help-block\">\n                  Please enter offer name\n                </CFormText>\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"state_name\">Code</CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"state_name\"\n                  name=\"state_name\"\n                  value={offer_code}\n                  placeholder=\"Enter State Name..\"\n                  onChange={(e) => setcode(e.target.value)}\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your State Name\n                </CFormText>\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"country\">Discount $Value</CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"country\"\n                  name=\"country\"\n                  value={offer_discount}\n                  placeholder=\"Enter Country..\"\n                  onChange={(e) => setdiscount(e.target.value)}\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your Country\n                </CFormText>\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"city_charges\">Valid to</CLabel>\n                <CInput\n                  type=\"date\"\n                  id=\"city_charges\"\n                  name=\"city_charges\"\n                  placeholder=\"Enter City Charges..\"\n                  value={offer_valid_to}\n                  onChange={(e) => setvalid_to(e.target.value)}\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your City Charges\n                </CFormText>\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"city_charges\">Valid From</CLabel>\n                <CInput\n                  type=\"date\"\n                  id=\"city_charges\"\n                  name=\"city_charges\"\n                  value={offer_valid_from}\n                  placeholder=\"Enter City Charges..\"\n                  onChange={(e) => setvalid_from(e.target.value)}\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your City Charges\n                </CFormText>\n              </CFormGroup>\n              <div style={{ textAlign: \"center\" }}>\n                <CButton\n                  color=\"primary\"\n                  onClick={edit ? handleEditSubmit : handleSubmit}\n                >\n                  {edit ? \"Update Offer\" : \"Create Offer\"}\n                </CButton>\n              </div>\n            </CCol>\n          </CRow>\n        </>\n      </Modal>\n    </>\n  );\n};\n\nexport default Offer;\n","/home/mastro/Desktop/fasto/fasto-admin/src/views/notifications/toaster/Toaster.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/widgets/Widgets.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/base/breadcrumbs/Breadcrumbs.js",["395","396","397","398","399","400","401","402"],"import React, { useEffect, useState, createRef } from \"react\";\nimport classNames from \"classnames\";\nimport { rgbToHex } from \"@coreui/utils\";\nimport DocsLink from \"../../../reusable/DocsLink\";\nimport Modal from \"../../../components/common/Modal\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { usersList } from \"../../../redux/actions/userAction\";\nimport {\n  CRow,\n  CCol,\n  CLabel,\n  CInput,\n  CFormGroup,\n  CFormText,\n  CButton,\n  CToaster,\n  CToastBody,\n  CToast,\n} from \"@coreui/react\";\nconst Passenger = () => {\n  const [openModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n  const { userslist } = useSelector((state) => state.users);\n\n  useEffect(() => {\n    async function getUsers() {\n      dispatch(usersList());\n    }\n    getUsers();\n  }, []);\n  console.log(userslist,\"user\");\n  return (\n    <>\n      <div className=\"d-flex justify-content-between\">\n        <h3>Passenger</h3>\n        <div onClick={() => setOpenModal(!openModal)}>\n          <i class=\"fas fa-plus-square\"></i>\n        </div>\n      </div>\n\n      <table className=\"table w-100\">\n        <thead>\n          <tr>\n            <th>User Name </th>\n            <th>First Name </th>\n            <th>Last Name </th>\n            <th>Profile Pic </th>\n            <th>Mobile </th>\n            <th>Email</th>\n            <th>State</th>\n            <th>Address </th>\n            <th>Pincode</th>\n            <th>Wallet </th>\n            <th>Member Type</th>\n          </tr>\n        </thead>\n        <tbody>\n          {userslist &&\n            userslist.map((item) => (\n              <tr key={item._id}>\n                <td className=\"\">{item.userName}</td>\n                <td className=\"\">{item.firstName}</td>\n                <td className=\"\">{item.lastName}</td>\n                <td className=\"\">{item.dp}</td>\n                <td className=\"\">{item.Mobile}</td>\n                <td className=\"\">{item.email}</td>\n                <td className=\"\">{item.state}</td>\n                <td className=\"\">{item.address}</td>\n                <td className=\"\">{item.pincode}</td>\n                <td className=\"\">{item.walletMoney}</td>\n                <td className=\"\">{item.memberType}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <Modal open={openModal} close={() => setOpenModal(!openModal)}>\n        <>\n          <h3>Passengers</h3>\n          <CRow>\n            <CCol md=\"12\">\n              <CFormGroup>\n                <div className=\"d-flex justify-content-between\">\n                  <div>\n                    <CLabel htmlFor=\"state_name\">User Name </CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor=\"state_name\">First Name </CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                </div>\n              </CFormGroup>\n              <CFormGroup>\n                <div className=\"d-flex justify-content-between\">\n                  <div>\n                    <CLabel htmlFor=\"state_name\">Last Name </CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor=\"state_name\"> Profile Pic </CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                </div>\n              </CFormGroup>\n              <CFormGroup>\n                <div className=\"d-flex justify-content-between\">\n                  <div>\n                    <CLabel htmlFor=\"state_name\">Mobile </CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor=\"state_name\"> Email </CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                </div>\n              </CFormGroup>\n              <CFormGroup>\n                <div className=\"d-flex justify-content-between\">\n                  <div>\n                    <CLabel htmlFor=\"state_name\">State</CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor=\"state_name\"> Address </CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                </div>\n              </CFormGroup>\n              <CFormGroup>\n                <div className=\"d-flex justify-content-between\">\n                  <div>\n                    <CLabel htmlFor=\"state_name\">Pincode</CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor=\"state_name\"> Wallet </CLabel>\n                    <CInput\n                      type=\"text\"\n                      id=\"state_name\"\n                      name=\"state_name\"\n                      placeholder=\"Enter State Name..\"\n                    />\n                    <CFormText className=\"help-block\">\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                </div>\n              </CFormGroup>\n              <div>\n                <CLabel htmlFor=\"state_name\"> Member Type </CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"state_name\"\n                  name=\"state_name\"\n                  placeholder=\"Enter State Name..\"\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your State Name\n                </CFormText>\n              </div>\n              <div style={{ textAlign: \"center\" }}>\n                <CButton color=\"primary\" onClick>\n                  Create City\n                </CButton>\n              </div>\n            </CCol>\n          </CRow>\n        </>\n      </Modal>\n    </>\n  );\n};\n\nexport default Passenger;\n","/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/drivers/drivers.js",["403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419"],"import React, { useEffect, useState, createRef } from 'react'\nimport classNames from 'classnames'\nimport { rgbToHex } from '@coreui/utils'\nimport DocsLink from '../../../reusable/DocsLink'\nimport Modal from '../../../components/common/Modal'\nimport {\n  CRow,\n  CCol,\n  CLabel,\n  CInput,\n  CFormGroup,\n  CFormText,\n  CButton,\n  CToaster,\n  CToastBody,\n  CToast,\n} from '@coreui/react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { driversList } from '../../../redux/actions/driverAction'\n\nconst Driver = () => {\n  const [openModal, setOpenModal] = useState(false)\n\n  const dispatch = useDispatch()\n  const { driverslist } = useSelector((state) => state.drivers)\n  const [userName, setUserName] = useState('')\n  const [firstName, setfirstName] = useState('')\n  const [lastName, setlastName] = useState('')\n  const [dp, setDp] = useState('')\n  const [Mobile, setMobile] = useState('')\n  const [email, setemail] = useState('')\n  const [state, setState] = useState('')\n  const [address, setaddress] = useState('')\n  const [pincode, setpincode] = useState('')\n  const [walletMoney, setwalletMoney] = useState('')\n  const [memberType, setmemberType] = useState('')\n  const [city, setcity] = useState('')\n  const [currentLocation, setcurrentLocation] = useState('')\n  const [driverAadhaar, setdriverAadhaar] = useState('')\n  const [driverRc, setdriverRc] = useState('')\n  const [driverInsurance, setdriverInsurance] = useState('')\n  const [driverCategory, setdriverCategory] = useState('')\n  const [totalKM, settotalKM] = useState('')\n  useEffect(() => {\n    async function getDrivers() {\n      dispatch(driversList())\n    }\n    getDrivers()\n  }, [])\n  console.log(driverslist);\n\n  const onHandleSubmit = () => {\n    console.log(\"handle\");\n  }\n\n  return (\n    <>\n      <div className='d-flex justify-content-between'>\n        <h3>Drivers</h3>\n        <div onClick={() => setOpenModal(!openModal)}>\n          <i class='fas fa-plus-square'></i>\n        </div>\n      </div>\n      <table className='table w-100'>\n        <thead>\n          <tr>\n            <th>User Name </th>\n            <th>First Name </th>\n            <th>Last Name </th>\n            <th>Profile Pic </th>\n            <th>Mobile </th>\n            <th>Email</th>\n            <th>State</th>\n            <th>Address </th>\n            <th>Pincode</th>\n            <th>Wallet </th>\n            <th>Member Type</th>\n          </tr>\n        </thead>\n        <tbody>\n          {driverslist &&\n            driverslist.map((item) => (\n              <tr key={item._id}>\n                <td className=''>{item.userName}</td>\n                <td className=''>{item.firstName}</td>\n                <td className=''>{item.lastName}</td>\n                <td className=''>{item.dp}</td>\n                <td className=''>{item.Mobile}</td>\n                <td className=''>{item.email}</td>\n                <td className=''>{item.state}</td>\n                <td className=''>{item.address}</td>\n                <td className=''>{item.pincode}</td>\n                <td className=''>{item.walletMoney}</td>\n                <td className=''>{item.memberType}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <Modal open={openModal} close={() => setOpenModal(!openModal)}>\n        <>\n          <h3>Drivers</h3>\n          <CRow>\n            <CCol md='12'>\n              <CFormGroup>\n                <CLabel htmlFor='city_name'>User Name</CLabel>\n                <CInput\n                  type='text'\n                  id='city_name'\n                  name='city_name'\n                  placeholder='Enter CityName..'\n                  value={userName}\n                  onChange={(e) => setUserName(e.target.value)}\n                />\n                <CFormText className='help-block'>\n                  Please enter your City\n                </CFormText>\n              </CFormGroup>\n              <CFormGroup>\n                <div className='d-flex justify-content-between'>\n                  <div>\n                    <CLabel htmlFor='state_name'>First Name</CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      value={firstName}\n                      placeholder='Enter State Name..'\n                      onChange={(e) => setfirstName(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor='state_name'>Last Name</CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      placeholder='Enter State Name..'\n                      value={lastName}\n                      onChange={(e) => setlastName(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                </div>\n              </CFormGroup>\n              <CFormGroup>\n                <div className='d-flex justify-content-between'>\n                  <div>\n                    <CLabel htmlFor='state_name'>Profile Pic</CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      value={dp}\n                      placeholder='Enter State Name..'\n                      onChange={(e) => setDp(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor='state_name'>Mobile</CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      value={Mobile}\n                      placeholder='Enter State Name..'\n                      onChange={(e) => setMobile(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                </div>\n                <div className='d-flex justify-content-between'>\n                  <div>\n                    <CLabel htmlFor='state_name'>Email</CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      value={email}\n                      placeholder='Enter State Name..'\n                      onChange={(e) => setemail(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor='state_name'>State</CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      value={state}\n                      placeholder='Enter State Name..'\n                      onChange={(e) => setState(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                </div>\n              </CFormGroup>\n              <div>\n                <CLabel htmlFor='state_name'>Address</CLabel>\n                <CInput\n                  type='text'\n                  id='state_name'\n                  name='state_name'\n                  value={address}\n                  placeholder='Enter State Name..'\n                  onChange={(e) => setaddress(e.target.value)}\n                />\n              </div>\n\n              <CFormGroup>\n                <div className='d-flex justify-content-between'>\n                  <div>\n                    <CLabel htmlFor='state_name'>Pin Code</CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      placeholder='Enter State Name..'\n                      value={pincode}\n                      onChange={(e) => setpincode(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor='state_name'>Wallet</CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      placeholder='Enter State Name..'\n                      value={walletMoney}\n                      onChange={(e) => setwalletMoney(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                </div>\n                <div className='d-flex justify-content-between'>\n                  <div>\n                    <CLabel htmlFor='state_name'>Member Type</CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      placeholder='Enter State Name..'\n                      onChange={(e) => setmemberType(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor='state_name'>City</CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      placeholder='Enter State Name..'\n                      onChange={(e) => setcity(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                </div>\n              </CFormGroup>\n              <CFormGroup>\n                <div className='d-flex justify-content-between'>\n                  <div>\n                    <CLabel htmlFor='state_name'>Current Location </CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      placeholder='Enter State Name..'\n                      onChange={(e) => setcurrentLocation(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor='state_name'>Aadhar </CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      placeholder='Enter State Name..'\n                      onChange={(e) => setdriverAadhaar(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                </div>\n              </CFormGroup>\n              <CFormGroup>\n                <div className='d-flex justify-content-between'>\n                  <div>\n                    <CLabel htmlFor='state_name'>rc </CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      placeholder='Enter State Name..'\n                      onChange={(e) => setdriverRc(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor='state_name'> insurance </CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      placeholder='Enter State Name..'\n                      onChange={(e) => setdriverInsurance(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your State Name\n                    </CFormText>\n                  </div>\n                </div>\n              </CFormGroup>\n              <CFormGroup>\n                <div className='d-flex justify-content-between'>\n                  <div>\n                    <CLabel htmlFor='state_name'>Driver Category </CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      placeholder='Enter Driver Category..'\n                      onChange={(e) => setdriverCategory(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your Driver Category\n                    </CFormText>\n                  </div>\n                  <div>\n                    <CLabel htmlFor='state_name'> Total km </CLabel>\n                    <CInput\n                      type='text'\n                      id='state_name'\n                      name='state_name'\n                      placeholder='Enter Total km.'\n                      onChange={(e) => settotalKM(e.target.value)}\n                    />\n                    <CFormText className='help-block'>\n                      Please enter your Total km\n                    </CFormText>\n                  </div>\n                </div>\n              </CFormGroup>\n              <div style={{ textAlign: 'center' }}>\n                <CButton color='primary' onClick>\n                  Create City\n                </CButton>\n              </div>\n            </CCol>\n          </CRow>\n        </>\n      </Modal>\n    </>\n  )\n}\n\nexport default Driver\n","/home/mastro/Desktop/fasto/fasto-admin/src/views/base/cards/Cards.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/vehicalAction.js",["420"],"import * as vehicalsApis from '../../services/vehical'\nimport * as vehicalsActionTypes from '../actionsType/vehicalActionType'\n\nexport const vehicalList = () => async (dispatch) => {\n  const response = await vehicalsApis.vehicallist()\n  console.log(response,\"vaction\");\n  dispatch({\n    type: vehicalsActionTypes.GET_VEHICALS,\n    payload: response?.data?.data,\n  })\n}\n\nexport const addVehical = (params) => async (dispatch) => {\n  console.log(params, 'oparpaprp')\n  const resp = await vehicalsApis.newVehical(params)\n  dispatch({\n    type: vehicalsActionTypes.ADD_VEHICALS,\n    payload: resp.data,\n  })\n  return resp.data\n}\n\nexport const updateSingleVehiclel = (_id, params) => async (dispatch) => {\n  const resp = await vehicalsApis.udpateVehicle(_id, params)\n  console.log(resp, 'resss')\n  dispatch({\n    type: vehicalsActionTypes.GET_SINGLE_VEHICLE,\n  })\n  return resp?.data\n}\n\nexport const deleteVehicle = (_id) => async (dispatch) => {\n  const resp = await vehicalsApis.deleteVehicle(_id)\n  dispatch({\n    type: vehicalsActionTypes.DELETE_VEHICLE,\n    payload: _id,\n  })\n}\n","/home/mastro/Desktop/fasto/fasto-admin/src/views/base/switches/Switches.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/userAction.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/charts/MainChartExample.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/widgets/WidgetsBrand.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/services/goodtype.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/settingActionType.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/services/rides.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/base/forms/BasicForms.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/ticketAction.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/buttons/button-groups/ButtonGroups.js",["421","422","423","424","425","426","427","428","429","430"],"/home/mastro/Desktop/fasto/fasto-admin/src/reportWebVitals.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/store.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/components/pages/Home.js",["431"],"import React from \"react\";\n\nexport default () => {\n  return <h1>Dashboard</h1>;\n};\n","/home/mastro/Desktop/fasto/fasto-admin/src/containers/index.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/containers/TheContent.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/containers/TheHeaderDropdownTasks.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/reducer/adminReducer.js",["432"],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/reducer/offerReducer.js",["433"],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/usersActionType.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/ridesActionType.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/users/User.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/icons/flags/Flags.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/base/paginations/Pagnations.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/refferals/refferals.js",["434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449"],"import React, { useEffect, useState, createRef } from \"react\";\nimport classNames from \"classnames\";\nimport { rgbToHex } from \"@coreui/utils\";\nimport DocsLink from \"../../../reusable/DocsLink\";\nimport Modal from \"../../../components/common/Modal\";\nimport {\n  CRow,\n  CCol,\n  CLabel,\n  CInput,\n  CFormGroup,\n  CFormText,\n  CButton,\n  CToaster,\n  CToastBody,\n  CToast,\n} from \"@coreui/react\";\nconst Refferals = () => {\n  const [openModal, setOpenModal] = useState(false);\n  const [s_no, sets_no] = useState(\"\");\n  const [discount_on_referrals, setdiscount_on_referrals] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const [toast, setToast] = useState(false);\n  return (\n    <>\n      <div className=\"d-flex justify-content-between\">\n        <h3>Refferals</h3>\n        <div onClick={() => setOpenModal(!openModal)}>\n          <i class=\"fas fa-plus-square\"></i>\n        </div>\n      </div>\n      <table className=\"table w-100\">\n        <thead>\n          <tr>\n            <th>s.no</th>\n            <th>Discount on referrals </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td className=\"\">#</td>\n            <td className=\"\">10%</td>\n          </tr>\n          <tr>\n            <td className=\"\">#</td>\n            <td className=\"\">10%</td>\n          </tr>\n          <tr>\n            <td className=\"\">#</td>\n            <td className=\"\">10%</td>\n          </tr>\n          <tr>\n            <td className=\"\">#</td>\n            <td className=\"\">10%</td>\n          </tr>\n        </tbody>\n      </table>\n      <Modal open={openModal} close={() => setOpenModal(!openModal)}>\n        <>\n          <h3>Refferals</h3>\n          <CRow>\n            <CCol md=\"12\">\n              <CFormGroup>\n                <CLabel htmlFor=\"city_name\">s.no</CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"city_name\"\n                  name=\"city_name\"\n                  placeholder=\"Enter CityName..\"\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your City\n                </CFormText>\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"state_name\">Discount on referrals</CLabel>\n                <CInput\n                  type=\"text\"\n                  id=\"state_name\"\n                  name=\"state_name\"\n                  placeholder=\"Enter State Name..\"\n                />\n                <CFormText className=\"help-block\">\n                  Please enter your State Name\n                </CFormText>\n              </CFormGroup>\n\n              <div style={{ textAlign: \"center\" }}>\n                <CButton color=\"primary\" onClick>\n                  Create City\n                </CButton>\n              </div>\n            </CCol>\n          </CRow>\n        </>\n      </Modal>\n    </>\n  );\n};\n\nexport default Refferals;\n","/home/mastro/Desktop/fasto/fasto-admin/src/views/base/navbars/Navbars.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/admin/Admin.js",["450","451","452","453"],"/home/mastro/Desktop/fasto/fasto-admin/src/views/base/list-groups/ListGroups.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/dashboard/Dashboard.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/cityactions.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/driverAction.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/widgets/WidgetsDropdown.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/charts/ChartLineSimple.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/services/city.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/services/setting.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/index.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/pages/page500/Page500.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/adminAction.js",["454"],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/reducer/ridesReducers.js",["455"],"/home/mastro/Desktop/fasto/fasto-admin/src/containers/_nav.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/actionsType/vehicalActionType.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/users/Users.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/theme/typography/Typography.js",["456","457","458","459","460","461","462","463","464","465","466","467"],"/home/mastro/Desktop/fasto/fasto-admin/src/views/icons/coreui-icons/CoreUIIcons.js",["468","469","470","471","472","473","474","475"],"/home/mastro/Desktop/fasto/fasto-admin/src/views/base/carousels/Carousels.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/reusable/DocsLink.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/views/base/navs/Navs.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/goodtypeactions.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/redux/actions/rideAction.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/services/offer.js",[],"/home/mastro/Desktop/fasto/fasto-admin/src/services/drivers.js",[],{"ruleId":"476","severity":1,"message":"477","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":12},{"ruleId":"476","severity":1,"message":"480","line":5,"column":8,"nodeType":"478","messageId":"479","endLine":5,"endColumn":12},{"ruleId":"476","severity":1,"message":"481","line":6,"column":8,"nodeType":"478","messageId":"479","endLine":6,"endColumn":15},{"ruleId":"482","replacedBy":"483"},{"ruleId":"484","replacedBy":"485"},{"ruleId":"476","severity":1,"message":"486","line":17,"column":23,"nodeType":"478","messageId":"479","endLine":17,"endColumn":34},{"ruleId":"476","severity":1,"message":"487","line":29,"column":9,"nodeType":"478","messageId":"479","endLine":29,"endColumn":17},{"ruleId":"476","severity":1,"message":"486","line":2,"column":10,"nodeType":"478","messageId":"479","endLine":2,"endColumn":21},{"ruleId":"476","severity":1,"message":"488","line":2,"column":23,"nodeType":"478","messageId":"479","endLine":2,"endColumn":34},{"ruleId":"482","replacedBy":"489"},{"ruleId":"484","replacedBy":"490"},{"ruleId":"476","severity":1,"message":"486","line":2,"column":10,"nodeType":"478","messageId":"479","endLine":2,"endColumn":21},{"ruleId":"476","severity":1,"message":"488","line":2,"column":23,"nodeType":"478","messageId":"479","endLine":2,"endColumn":34},{"ruleId":"491","severity":1,"message":"492","line":3,"column":1,"nodeType":"493","endLine":31,"endColumn":3},{"ruleId":"491","severity":1,"message":"492","line":2,"column":1,"nodeType":"493","endLine":13,"endColumn":2},{"ruleId":"491","severity":1,"message":"492","line":3,"column":1,"nodeType":"493","endLine":31,"endColumn":2},{"ruleId":"476","severity":1,"message":"494","line":1,"column":38,"nodeType":"478","messageId":"479","endLine":1,"endColumn":47},{"ruleId":"476","severity":1,"message":"495","line":11,"column":3,"nodeType":"478","messageId":"479","endLine":11,"endColumn":11},{"ruleId":"476","severity":1,"message":"496","line":12,"column":3,"nodeType":"478","messageId":"479","endLine":12,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":13,"column":3,"nodeType":"478","messageId":"479","endLine":13,"endColumn":9},{"ruleId":"476","severity":1,"message":"498","line":21,"column":3,"nodeType":"478","messageId":"479","endLine":21,"endColumn":13},{"ruleId":"476","severity":1,"message":"499","line":22,"column":3,"nodeType":"478","messageId":"479","endLine":22,"endColumn":15},{"ruleId":"476","severity":1,"message":"500","line":23,"column":3,"nodeType":"478","messageId":"479","endLine":23,"endColumn":13},{"ruleId":"476","severity":1,"message":"501","line":24,"column":3,"nodeType":"478","messageId":"479","endLine":24,"endColumn":13},{"ruleId":"476","severity":1,"message":"502","line":34,"column":10,"nodeType":"478","messageId":"479","endLine":34,"endColumn":14},{"ruleId":"476","severity":1,"message":"503","line":34,"column":16,"nodeType":"478","messageId":"479","endLine":34,"endColumn":23},{"ruleId":"476","severity":1,"message":"504","line":35,"column":10,"nodeType":"478","messageId":"479","endLine":35,"endColumn":13},{"ruleId":"476","severity":1,"message":"505","line":35,"column":15,"nodeType":"478","messageId":"479","endLine":35,"endColumn":21},{"ruleId":"476","severity":1,"message":"506","line":36,"column":10,"nodeType":"478","messageId":"479","endLine":36,"endColumn":20},{"ruleId":"476","severity":1,"message":"507","line":36,"column":22,"nodeType":"478","messageId":"479","endLine":36,"endColumn":35},{"ruleId":"476","severity":1,"message":"508","line":37,"column":10,"nodeType":"478","messageId":"479","endLine":37,"endColumn":17},{"ruleId":"476","severity":1,"message":"509","line":37,"column":19,"nodeType":"478","messageId":"479","endLine":37,"endColumn":29},{"ruleId":"476","severity":1,"message":"510","line":39,"column":10,"nodeType":"478","messageId":"479","endLine":39,"endColumn":17},{"ruleId":"476","severity":1,"message":"511","line":39,"column":19,"nodeType":"478","messageId":"479","endLine":39,"endColumn":29},{"ruleId":"476","severity":1,"message":"512","line":40,"column":10,"nodeType":"478","messageId":"479","endLine":40,"endColumn":15},{"ruleId":"476","severity":1,"message":"513","line":40,"column":17,"nodeType":"478","messageId":"479","endLine":40,"endColumn":25},{"ruleId":"514","severity":1,"message":"515","line":52,"column":6,"nodeType":"516","endLine":52,"endColumn":13,"suggestions":"517"},{"ruleId":"476","severity":1,"message":"494","line":1,"column":38,"nodeType":"478","messageId":"479","endLine":1,"endColumn":47},{"ruleId":"514","severity":1,"message":"515","line":40,"column":6,"nodeType":"516","endLine":40,"endColumn":13,"suggestions":"518"},{"ruleId":"519","severity":1,"message":"520","line":53,"column":24,"nodeType":"521","messageId":"522","endLine":53,"endColumn":26},{"ruleId":"519","severity":1,"message":"520","line":70,"column":24,"nodeType":"521","messageId":"522","endLine":70,"endColumn":26},{"ruleId":"476","severity":1,"message":"523","line":1,"column":17,"nodeType":"478","messageId":"479","endLine":1,"endColumn":26},{"ruleId":"476","severity":1,"message":"494","line":1,"column":38,"nodeType":"478","messageId":"479","endLine":1,"endColumn":47},{"ruleId":"476","severity":1,"message":"524","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":18},{"ruleId":"476","severity":1,"message":"525","line":3,"column":10,"nodeType":"478","messageId":"479","endLine":3,"endColumn":18},{"ruleId":"476","severity":1,"message":"526","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":16},{"ruleId":"476","severity":1,"message":"495","line":14,"column":3,"nodeType":"478","messageId":"479","endLine":14,"endColumn":11},{"ruleId":"476","severity":1,"message":"496","line":15,"column":3,"nodeType":"478","messageId":"479","endLine":15,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":16,"column":3,"nodeType":"478","messageId":"479","endLine":16,"endColumn":9},{"ruleId":"476","severity":1,"message":"494","line":1,"column":38,"nodeType":"478","messageId":"479","endLine":1,"endColumn":47},{"ruleId":"476","severity":1,"message":"524","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":18},{"ruleId":"476","severity":1,"message":"525","line":3,"column":10,"nodeType":"478","messageId":"479","endLine":3,"endColumn":18},{"ruleId":"476","severity":1,"message":"526","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":16},{"ruleId":"476","severity":1,"message":"495","line":14,"column":3,"nodeType":"478","messageId":"479","endLine":14,"endColumn":11},{"ruleId":"476","severity":1,"message":"496","line":15,"column":3,"nodeType":"478","messageId":"479","endLine":15,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":16,"column":3,"nodeType":"478","messageId":"479","endLine":16,"endColumn":9},{"ruleId":"476","severity":1,"message":"510","line":32,"column":10,"nodeType":"478","messageId":"479","endLine":32,"endColumn":17},{"ruleId":"514","severity":1,"message":"515","line":41,"column":6,"nodeType":"516","endLine":41,"endColumn":8,"suggestions":"527"},{"ruleId":"519","severity":1,"message":"520","line":48,"column":23,"nodeType":"521","messageId":"522","endLine":48,"endColumn":25},{"ruleId":"519","severity":1,"message":"520","line":61,"column":24,"nodeType":"521","messageId":"522","endLine":61,"endColumn":26},{"ruleId":"476","severity":1,"message":"494","line":1,"column":38,"nodeType":"478","messageId":"479","endLine":1,"endColumn":47},{"ruleId":"476","severity":1,"message":"524","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":18},{"ruleId":"476","severity":1,"message":"525","line":3,"column":10,"nodeType":"478","messageId":"479","endLine":3,"endColumn":18},{"ruleId":"476","severity":1,"message":"526","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":16},{"ruleId":"476","severity":1,"message":"495","line":16,"column":3,"nodeType":"478","messageId":"479","endLine":16,"endColumn":11},{"ruleId":"476","severity":1,"message":"496","line":17,"column":3,"nodeType":"478","messageId":"479","endLine":17,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":18,"column":3,"nodeType":"478","messageId":"479","endLine":18,"endColumn":9},{"ruleId":"476","severity":1,"message":"510","line":36,"column":10,"nodeType":"478","messageId":"479","endLine":36,"endColumn":17},{"ruleId":"514","severity":1,"message":"515","line":44,"column":6,"nodeType":"516","endLine":44,"endColumn":8,"suggestions":"528"},{"ruleId":"519","severity":1,"message":"520","line":54,"column":23,"nodeType":"521","messageId":"522","endLine":54,"endColumn":25},{"ruleId":"519","severity":1,"message":"520","line":73,"column":24,"nodeType":"521","messageId":"522","endLine":73,"endColumn":26},{"ruleId":"476","severity":1,"message":"494","line":1,"column":38,"nodeType":"478","messageId":"479","endLine":1,"endColumn":47},{"ruleId":"476","severity":1,"message":"524","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":18},{"ruleId":"476","severity":1,"message":"525","line":3,"column":10,"nodeType":"478","messageId":"479","endLine":3,"endColumn":18},{"ruleId":"476","severity":1,"message":"526","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":16},{"ruleId":"476","severity":1,"message":"495","line":17,"column":3,"nodeType":"478","messageId":"479","endLine":17,"endColumn":11},{"ruleId":"476","severity":1,"message":"496","line":18,"column":3,"nodeType":"478","messageId":"479","endLine":18,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":19,"column":3,"nodeType":"478","messageId":"479","endLine":19,"endColumn":9},{"ruleId":"514","severity":1,"message":"515","line":31,"column":6,"nodeType":"516","endLine":31,"endColumn":8,"suggestions":"529"},{"ruleId":"476","severity":1,"message":"494","line":1,"column":38,"nodeType":"478","messageId":"479","endLine":1,"endColumn":47},{"ruleId":"476","severity":1,"message":"524","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":18},{"ruleId":"476","severity":1,"message":"525","line":3,"column":10,"nodeType":"478","messageId":"479","endLine":3,"endColumn":18},{"ruleId":"476","severity":1,"message":"526","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":16},{"ruleId":"476","severity":1,"message":"495","line":14,"column":3,"nodeType":"478","messageId":"479","endLine":14,"endColumn":11},{"ruleId":"476","severity":1,"message":"496","line":15,"column":3,"nodeType":"478","messageId":"479","endLine":15,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":16,"column":3,"nodeType":"478","messageId":"479","endLine":16,"endColumn":9},{"ruleId":"476","severity":1,"message":"530","line":36,"column":10,"nodeType":"478","messageId":"479","endLine":36,"endColumn":20},{"ruleId":"476","severity":1,"message":"531","line":37,"column":10,"nodeType":"478","messageId":"479","endLine":37,"endColumn":14},{"ruleId":"476","severity":1,"message":"532","line":38,"column":10,"nodeType":"478","messageId":"479","endLine":38,"endColumn":25},{"ruleId":"476","severity":1,"message":"533","line":39,"column":10,"nodeType":"478","messageId":"479","endLine":39,"endColumn":23},{"ruleId":"476","severity":1,"message":"534","line":40,"column":10,"nodeType":"478","messageId":"479","endLine":40,"endColumn":18},{"ruleId":"476","severity":1,"message":"535","line":41,"column":10,"nodeType":"478","messageId":"479","endLine":41,"endColumn":25},{"ruleId":"476","severity":1,"message":"536","line":42,"column":10,"nodeType":"478","messageId":"479","endLine":42,"endColumn":24},{"ruleId":"476","severity":1,"message":"537","line":43,"column":10,"nodeType":"478","messageId":"479","endLine":43,"endColumn":17},{"ruleId":"514","severity":1,"message":"515","line":49,"column":6,"nodeType":"516","endLine":49,"endColumn":8,"suggestions":"538"},{"ruleId":"476","severity":1,"message":"539","line":52,"column":9,"nodeType":"478","messageId":"479","endLine":52,"endColumn":23},{"ruleId":"476","severity":1,"message":"540","line":33,"column":9,"nodeType":"478","messageId":"479","endLine":33,"endColumn":13},{"ruleId":"476","severity":1,"message":"494","line":1,"column":38,"nodeType":"478","messageId":"479","endLine":1,"endColumn":47},{"ruleId":"476","severity":1,"message":"524","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":18},{"ruleId":"476","severity":1,"message":"525","line":3,"column":10,"nodeType":"478","messageId":"479","endLine":3,"endColumn":18},{"ruleId":"476","severity":1,"message":"526","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":16},{"ruleId":"476","severity":1,"message":"495","line":16,"column":3,"nodeType":"478","messageId":"479","endLine":16,"endColumn":11},{"ruleId":"476","severity":1,"message":"496","line":17,"column":3,"nodeType":"478","messageId":"479","endLine":17,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":18,"column":3,"nodeType":"478","messageId":"479","endLine":18,"endColumn":9},{"ruleId":"476","severity":1,"message":"541","line":23,"column":10,"nodeType":"478","messageId":"479","endLine":23,"endColumn":22},{"ruleId":"476","severity":1,"message":"542","line":27,"column":16,"nodeType":"478","messageId":"479","endLine":27,"endColumn":23},{"ruleId":"514","severity":1,"message":"515","line":34,"column":6,"nodeType":"516","endLine":34,"endColumn":12,"suggestions":"543"},{"ruleId":"491","severity":1,"message":"492","line":3,"column":1,"nodeType":"493","endLine":5,"endColumn":3},{"ruleId":"491","severity":1,"message":"492","line":3,"column":1,"nodeType":"493","endLine":36,"endColumn":3},{"ruleId":"491","severity":1,"message":"492","line":3,"column":1,"nodeType":"493","endLine":31,"endColumn":3},{"ruleId":"476","severity":1,"message":"523","line":1,"column":17,"nodeType":"478","messageId":"479","endLine":1,"endColumn":26},{"ruleId":"476","severity":1,"message":"494","line":1,"column":38,"nodeType":"478","messageId":"479","endLine":1,"endColumn":47},{"ruleId":"476","severity":1,"message":"524","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":18},{"ruleId":"476","severity":1,"message":"525","line":3,"column":10,"nodeType":"478","messageId":"479","endLine":3,"endColumn":18},{"ruleId":"476","severity":1,"message":"526","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":16},{"ruleId":"476","severity":1,"message":"495","line":14,"column":3,"nodeType":"478","messageId":"479","endLine":14,"endColumn":11},{"ruleId":"476","severity":1,"message":"496","line":15,"column":3,"nodeType":"478","messageId":"479","endLine":15,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":16,"column":3,"nodeType":"478","messageId":"479","endLine":16,"endColumn":9},{"ruleId":"476","severity":1,"message":"544","line":20,"column":10,"nodeType":"478","messageId":"479","endLine":20,"endColumn":14},{"ruleId":"476","severity":1,"message":"545","line":20,"column":16,"nodeType":"478","messageId":"479","endLine":20,"endColumn":23},{"ruleId":"476","severity":1,"message":"546","line":21,"column":10,"nodeType":"478","messageId":"479","endLine":21,"endColumn":31},{"ruleId":"476","severity":1,"message":"547","line":21,"column":33,"nodeType":"478","messageId":"479","endLine":21,"endColumn":57},{"ruleId":"476","severity":1,"message":"510","line":22,"column":10,"nodeType":"478","messageId":"479","endLine":22,"endColumn":17},{"ruleId":"476","severity":1,"message":"511","line":22,"column":19,"nodeType":"478","messageId":"479","endLine":22,"endColumn":29},{"ruleId":"476","severity":1,"message":"512","line":24,"column":10,"nodeType":"478","messageId":"479","endLine":24,"endColumn":15},{"ruleId":"476","severity":1,"message":"513","line":24,"column":17,"nodeType":"478","messageId":"479","endLine":24,"endColumn":25},{"ruleId":"476","severity":1,"message":"494","line":1,"column":38,"nodeType":"478","messageId":"479","endLine":1,"endColumn":47},{"ruleId":"476","severity":1,"message":"503","line":26,"column":16,"nodeType":"478","messageId":"479","endLine":26,"endColumn":23},{"ruleId":"514","severity":1,"message":"515","line":42,"column":6,"nodeType":"516","endLine":42,"endColumn":13,"suggestions":"548"},{"ruleId":"519","severity":1,"message":"520","line":73,"column":24,"nodeType":"521","messageId":"522","endLine":73,"endColumn":26},{"ruleId":"476","severity":1,"message":"549","line":33,"column":9,"nodeType":"478","messageId":"479","endLine":33,"endColumn":17},{"ruleId":"491","severity":1,"message":"492","line":3,"column":1,"nodeType":"493","endLine":33,"endColumn":3},{"ruleId":"476","severity":1,"message":"494","line":1,"column":38,"nodeType":"478","messageId":"479","endLine":1,"endColumn":47},{"ruleId":"476","severity":1,"message":"524","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":18},{"ruleId":"476","severity":1,"message":"525","line":3,"column":10,"nodeType":"478","messageId":"479","endLine":3,"endColumn":18},{"ruleId":"476","severity":1,"message":"526","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":16},{"ruleId":"476","severity":1,"message":"495","line":16,"column":3,"nodeType":"478","messageId":"479","endLine":16,"endColumn":11},{"ruleId":"476","severity":1,"message":"496","line":17,"column":3,"nodeType":"478","messageId":"479","endLine":17,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":18,"column":3,"nodeType":"478","messageId":"479","endLine":18,"endColumn":9},{"ruleId":"476","severity":1,"message":"550","line":34,"column":10,"nodeType":"478","messageId":"479","endLine":34,"endColumn":18},{"ruleId":"476","severity":1,"message":"510","line":42,"column":10,"nodeType":"478","messageId":"479","endLine":42,"endColumn":17},{"ruleId":"514","severity":1,"message":"551","line":53,"column":6,"nodeType":"516","endLine":53,"endColumn":13,"suggestions":"552"},{"ruleId":"519","severity":1,"message":"520","line":75,"column":23,"nodeType":"521","messageId":"522","endLine":75,"endColumn":25},{"ruleId":"519","severity":1,"message":"520","line":102,"column":24,"nodeType":"521","messageId":"522","endLine":102,"endColumn":26},{"ruleId":"476","severity":1,"message":"523","line":1,"column":17,"nodeType":"478","messageId":"479","endLine":1,"endColumn":26},{"ruleId":"476","severity":1,"message":"494","line":1,"column":38,"nodeType":"478","messageId":"479","endLine":1,"endColumn":47},{"ruleId":"476","severity":1,"message":"524","line":2,"column":8,"nodeType":"478","messageId":"479","endLine":2,"endColumn":18},{"ruleId":"476","severity":1,"message":"525","line":3,"column":10,"nodeType":"478","messageId":"479","endLine":3,"endColumn":18},{"ruleId":"476","severity":1,"message":"526","line":4,"column":8,"nodeType":"478","messageId":"479","endLine":4,"endColumn":16},{"ruleId":"476","severity":1,"message":"495","line":14,"column":3,"nodeType":"478","messageId":"479","endLine":14,"endColumn":11},{"ruleId":"476","severity":1,"message":"496","line":15,"column":3,"nodeType":"478","messageId":"479","endLine":15,"endColumn":13},{"ruleId":"476","severity":1,"message":"497","line":16,"column":3,"nodeType":"478","messageId":"479","endLine":16,"endColumn":9},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'Sidebar' is defined but never used.","no-native-reassign",["553"],"no-negated-in-lhs",["554"],"'useSelector' is defined but never used.","'location' is assigned a value but never used.","'useDispatch' is defined but never used.",["553"],["554"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'createRef' is defined but never used.","'CToaster' is defined but never used.","'CToastBody' is defined but never used.","'CToast' is defined but never used.","'createCity' is defined but never used.","'getAllCities' is defined but never used.","'updateCity' is defined but never used.","'deleteCity' is defined but never used.","'Edit' is assigned a value but never used.","'setEdit' is assigned a value but never used.","'_id' is assigned a value but never used.","'set_id' is assigned a value but never used.","'state_name' is assigned a value but never used.","'setState_name' is assigned a value but never used.","'country' is assigned a value but never used.","'setcountry' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'toast' is assigned a value but never used.","'setToast' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["555"],["556"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'classNames' is defined but never used.","'rgbToHex' is defined but never used.","'DocsLink' is defined but never used.",["557"],["558"],["559"],"'memberType' is assigned a value but never used.","'city' is assigned a value but never used.","'currentLocation' is assigned a value but never used.","'driverAadhaar' is assigned a value but never used.","'driverRc' is assigned a value but never used.","'driverInsurance' is assigned a value but never used.","'driverCategory' is assigned a value but never used.","'totalKM' is assigned a value but never used.",["560"],"'onHandleSubmit' is assigned a value but never used.","'resp' is assigned a value but never used.","'getAllticket' is defined but never used.","'setflag' is assigned a value but never used.",["561"],"'s_no' is assigned a value but never used.","'sets_no' is assigned a value but never used.","'discount_on_referrals' is assigned a value but never used.","'setdiscount_on_referrals' is assigned a value but never used.",["562"],"'response' is assigned a value but never used.","'editData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'edit', and 'singleVehicle'. Either include them or remove the dependency array.",["563"],"no-global-assign","no-unsafe-negation",{"desc":"564","fix":"565"},{"desc":"564","fix":"566"},{"desc":"567","fix":"568"},{"desc":"567","fix":"569"},{"desc":"567","fix":"570"},{"desc":"567","fix":"571"},{"desc":"572","fix":"573"},{"desc":"564","fix":"574"},{"desc":"575","fix":"576"},"Update the dependencies array to be: [dispatch, flage]",{"range":"577","text":"578"},{"range":"579","text":"578"},"Update the dependencies array to be: [dispatch]",{"range":"580","text":"581"},{"range":"582","text":"581"},{"range":"583","text":"581"},{"range":"584","text":"581"},"Update the dependencies array to be: [dispatch, flag]",{"range":"585","text":"586"},{"range":"587","text":"578"},"Update the dependencies array to be: [dispatch, edit, flage, singleVehicle]",{"range":"588","text":"589"},[1432,1439],"[dispatch, flage]",[1126,1133],[1165,1167],"[dispatch]",[1283,1285],[793,795],[1657,1659],[928,934],"[dispatch, flag]",[1197,1204],[1457,1464],"[dispatch, edit, flage, singleVehicle]"]